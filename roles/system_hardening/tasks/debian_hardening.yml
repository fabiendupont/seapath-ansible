# Copyright (C) 2025 RTE
# SPDX-License-Identifier: Apache-2.0

---
# Debian/Ubuntu hardening (existing ANSSI BP-28 implementation)

- name: Create privileged groups
  ansible.builtin.group:
    name: "{{ item }}"
    state: present
  loop:
    - ansible
    - privileged
  when: not revert

- name: Add kernel parameters to GRUB
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    regexp: "^(GRUB_CMDLINE_LINUX=(?!.* {{ item }})\"[^\"]*)(\".*)"
    line: '\1 {{ item }}\2'
    state: present
    backrefs: yes
  register: updategrub
  loop: "{{ hardening_kernel_params }}"
  when: not revert

- name: Remove kernel parameters from GRUB
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    regexp: "^(GRUB_CMDLINE_LINUX=\".*)( {{ item }})(.*\")$"
    line: '\1\3'
    state: present
    backrefs: yes
  register: updategrub
  loop: "{{ hardening_kernel_params }}"
  when: revert

- name: Configure sysctl hardening
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "sysctl/90-sysctl-hardening.conf", dest: "/etc/sysctl.d/zz-sysctl-hardening.conf" }
    - { src: "sysctl/99-sysctl-network.conf", dest: "/etc/sysctl.d/99-sysctl-network.conf" }
  notify: Update sysfs values using sysctl
  when: not revert

- name: Remove sysctl hardening
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /etc/sysctl.d/zz-sysctl-hardening.conf
    - /etc/sysctl.d/99-sysctl-network.conf
  notify: Update sysfs values using sysctl
  when: revert

- name: Configure SSH hardening
  ansible.builtin.template:
    src: ssh-audit_hardening.conf.j2
    dest: /etc/ssh/sshd_config.d/ssh-audit_hardening.conf
  when: not revert

- name: Remove SSH hardening
  ansible.builtin.file:
    path: /etc/ssh/sshd_config.d/ssh-audit_hardening.conf
    state: absent
  when: revert

- name: Configure sudo security
  ansible.builtin.copy:
    src: sudoers/security
    dest: /etc/sudoers.d/00-security
    owner: root
    group: root
    mode: '0440'
  when: not revert

- name: Remove sudo security
  ansible.builtin.file:
    path: /etc/sudoers.d/00-security
    state: absent
  when: revert

- name: Configure sudo permissions
  ansible.builtin.file:
    path: /usr/bin/sudo
    owner: root
    group: privileged
    mode: '4750'
  when: not revert

- name: Restore sudo permissions
  ansible.builtin.file:
    path: /usr/bin/sudo
    owner: root
    group: root
    mode: '4755'
  when: revert

- name: Configure PAM hardening
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "hardened_pam_su", dest: "/etc/pam.d/su" }
    - { src: "hardened_pam_su", dest: "/etc/pam.d/su-l" }
  when: not revert

- name: Restore PAM settings
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "default_pam_su", dest: "/etc/pam.d/su" }
    - { src: "default_pam_su-l", dest: "/etc/pam.d/su-l" }
  when: revert

- name: Configure securetty
  ansible.builtin.copy:
    content: ""
    dest: /etc/securetty
    force: no
    group: sys
    owner: root
    mode: 0644
  when: not revert

- name: Remove securetty
  ansible.builtin.file:
    path: /etc/securetty
    state: absent
  when: revert

- name: Configure GRUB password
  ansible.builtin.template:
    src: "01_password.j2"
    dest: /etc/grub.d/01_password
    group: "root"
    owner: "root"
    mode: 0755
  when: not revert and grub_password is defined

- name: Remove GRUB password
  ansible.builtin.file:
    state: absent
    path: /etc/grub.d/01_password
  when: revert

- name: Configure GRUB unrestricted access
  ansible.builtin.lineinfile:
    path: /etc/grub.d/10_linux
    regexp: '^CLASS='
    line: 'CLASS="--class gnu-linux --class gnu --class os --unrestricted"'
  when: not revert

- name: Remove GRUB unrestricted access
  ansible.builtin.lineinfile:
    path: /etc/grub.d/10_linux
    regexp: '^CLASS='
    line: 'CLASS="--class gnu-linux --class gnu --class os"'
  when: revert

- name: Configure auditd
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "auditd/syslog.conf", dest: "/etc/audit/plugins.d/syslog.conf" }
    - { src: "auditd/audit.rules", dest: "/etc/audit/rules.d/audit.rules" }

- name: Update GRUB
  ansible.builtin.command: update-grub
  changed_when: true
